1
00:00:01,790 --> 00:00:12,719
[Music]

2
00:00:11,040 --> 00:00:14,559
welcome back everyone

3
00:00:12,719 --> 00:00:16,160
in this video i'm going to introduce you

4
00:00:14,559 --> 00:00:19,520
to our data structure of the week

5
00:00:16,160 --> 00:00:22,640
which this week is python lists

6
00:00:19,520 --> 00:00:24,880
now you use a list in python to store

7
00:00:22,640 --> 00:00:26,480
a bunch of data now what that data is

8
00:00:24,880 --> 00:00:28,560
well that really depends on your program

9
00:00:26,480 --> 00:00:30,880
it could be a list of numbers it could

10
00:00:28,560 --> 00:00:33,040
be a list of names of people you know

11
00:00:30,880 --> 00:00:34,399
it could be a list of objects where each

12
00:00:33,040 --> 00:00:37,360
object represents

13
00:00:34,399 --> 00:00:38,079
some monster in a game your sky's the

14
00:00:37,360 --> 00:00:39,520
limit you can use

15
00:00:38,079 --> 00:00:41,200
this to store pretty much a list of

16
00:00:39,520 --> 00:00:43,760
anything um

17
00:00:41,200 --> 00:00:45,039
this uh the simplest main data structure

18
00:00:43,760 --> 00:00:46,719
in python

19
00:00:45,039 --> 00:00:48,079
and so i'm going to go through and show

20
00:00:46,719 --> 00:00:51,840
you what they can do

21
00:00:48,079 --> 00:00:55,920
and and how you use python lists so

22
00:00:51,840 --> 00:00:58,960
let me fire up a terminal window

23
00:00:55,920 --> 00:01:01,199
and let's get started

24
00:00:58,960 --> 00:01:04,000
so i'm just going to start by just

25
00:01:01,199 --> 00:01:07,680
typing some commands into python

26
00:01:04,000 --> 00:01:10,880
and so we can create a list

27
00:01:07,680 --> 00:01:10,880
by doing this

28
00:01:11,680 --> 00:01:14,880
basically what i've done here is to use

29
00:01:13,439 --> 00:01:16,479
square brackets and that creates an

30
00:01:14,880 --> 00:01:17,840
empty list now empty lists are really

31
00:01:16,479 --> 00:01:19,920
not very interesting

32
00:01:17,840 --> 00:01:21,759
so instead of an empty list i'm going to

33
00:01:19,920 --> 00:01:22,799
initialize the list with some data and i

34
00:01:21,759 --> 00:01:24,400
can do that

35
00:01:22,799 --> 00:01:26,320
again using square brackets and this is

36
00:01:24,400 --> 00:01:28,320
going to be a list of the

37
00:01:26,320 --> 00:01:29,439
the weekdays in a week so we're going to

38
00:01:28,320 --> 00:01:31,280
add the string

39
00:01:29,439 --> 00:01:32,720
monday we're going to add the string

40
00:01:31,280 --> 00:01:36,400
tuesday

41
00:01:32,720 --> 00:01:36,400
i got string wednesday

42
00:01:38,880 --> 00:01:45,280
thursday and friday

43
00:01:42,560 --> 00:01:47,040
okay it's not a very exciting list but

44
00:01:45,280 --> 00:01:49,439
there we go

45
00:01:47,040 --> 00:01:51,920
so now i've created a list i can print

46
00:01:49,439 --> 00:01:53,360
it out for example

47
00:01:51,920 --> 00:01:55,600
which just shows me exactly what i did

48
00:01:53,360 --> 00:01:56,479
before so what have we got here so far

49
00:01:55,600 --> 00:01:58,399
well

50
00:01:56,479 --> 00:01:59,920
what we know is we use square brackets

51
00:01:58,399 --> 00:02:01,920
to denote a list

52
00:01:59,920 --> 00:02:04,000
and we use commas to separate the item

53
00:02:01,920 --> 00:02:04,719
in the list and the actual things we put

54
00:02:04,000 --> 00:02:06,320
into the list

55
00:02:04,719 --> 00:02:08,000
in this case i've put in text strings

56
00:02:06,320 --> 00:02:09,920
representing date of the week but they

57
00:02:08,000 --> 00:02:12,319
could be other things such as numbers or

58
00:02:09,920 --> 00:02:13,920
objects or things like that

59
00:02:12,319 --> 00:02:15,760
and you can mix them so you could have a

60
00:02:13,920 --> 00:02:17,360
mixture of strings and numbers and

61
00:02:15,760 --> 00:02:18,720
things like that if you wish to

62
00:02:17,360 --> 00:02:20,879
there's no particular restriction that

63
00:02:18,720 --> 00:02:22,640
they all have to be of the same type

64
00:02:20,879 --> 00:02:24,720
that's quite different from for example

65
00:02:22,640 --> 00:02:26,080
an array in c

66
00:02:24,720 --> 00:02:27,760
now what can we actually do when we've

67
00:02:26,080 --> 00:02:29,920
created our list

68
00:02:27,760 --> 00:02:31,680
one thing we might be able to do is to

69
00:02:29,920 --> 00:02:34,879
say well how long is the list

70
00:02:31,680 --> 00:02:38,319
so we can print out the length of

71
00:02:34,879 --> 00:02:38,319
the list length of days

72
00:02:38,640 --> 00:02:43,920
and indeed it says there are five days

73
00:02:40,720 --> 00:02:45,360
in our list of weekdays

74
00:02:43,920 --> 00:02:47,040
next thing we can do is we can actually

75
00:02:45,360 --> 00:02:48,000
access the data from the list we can

76
00:02:47,040 --> 00:02:51,280
access

77
00:02:48,000 --> 00:02:52,160
the data by its position so if we want

78
00:02:51,280 --> 00:02:55,760
to

79
00:02:52,160 --> 00:02:58,239
um look at say what's day two

80
00:02:55,760 --> 00:03:00,000
day two of the week is equal to days and

81
00:02:58,239 --> 00:03:01,440
we can index in by the position in the

82
00:03:00,000 --> 00:03:05,440
list like that

83
00:03:01,440 --> 00:03:06,800
and so we can print out what day two is

84
00:03:05,440 --> 00:03:08,800
and we discover that day two is

85
00:03:06,800 --> 00:03:12,080
wednesday no it's not

86
00:03:08,800 --> 00:03:13,519
um so what's happened here um

87
00:03:12,080 --> 00:03:15,840
the one of the things that's really

88
00:03:13,519 --> 00:03:18,080
important to realize is that

89
00:03:15,840 --> 00:03:19,200
indexing operations in python as they

90
00:03:18,080 --> 00:03:19,920
are in quite a lot of other programming

91
00:03:19,200 --> 00:03:21,840
languages

92
00:03:19,920 --> 00:03:23,840
the very first item is not item number

93
00:03:21,840 --> 00:03:26,000
one it's item number zero

94
00:03:23,840 --> 00:03:27,440
and and this is there for very good

95
00:03:26,000 --> 00:03:29,280
reasons it makes things much

96
00:03:27,440 --> 00:03:31,040
simpler in terms of the arithmetic of

97
00:03:29,280 --> 00:03:32,000
how you actually index things if things

98
00:03:31,040 --> 00:03:33,920
start at zero not

99
00:03:32,000 --> 00:03:35,360
one but you've got to be just a little

100
00:03:33,920 --> 00:03:36,560
bit careful to be aware that you know

101
00:03:35,360 --> 00:03:39,920
what's going on

102
00:03:36,560 --> 00:03:42,080
so day two of the week is not days

103
00:03:39,920 --> 00:03:44,560
two day two of the week is days one

104
00:03:42,080 --> 00:03:45,599
because zero would be the first one

105
00:03:44,560 --> 00:03:48,000
so we can print that out and now it's

106
00:03:45,599 --> 00:03:50,080
actually done the right thing

107
00:03:48,000 --> 00:03:51,599
okay so that's the first thing we can do

108
00:03:50,080 --> 00:03:52,959
we can actually access the data that

109
00:03:51,599 --> 00:03:53,920
we've got stored that's a really useful

110
00:03:52,959 --> 00:03:56,159
thing to be able to do

111
00:03:53,920 --> 00:03:58,400
and we access it in this way by its

112
00:03:56,159 --> 00:04:00,239
position

113
00:03:58,400 --> 00:04:01,439
what's the next thing we can do well if

114
00:04:00,239 --> 00:04:03,040
our list is

115
00:04:01,439 --> 00:04:04,560
fixed and can't be changed it has

116
00:04:03,040 --> 00:04:07,680
limited use so

117
00:04:04,560 --> 00:04:08,640
maybe we can add the weekend so what we

118
00:04:07,680 --> 00:04:11,680
can do is we can

119
00:04:08,640 --> 00:04:12,560
take our days list and we can append to

120
00:04:11,680 --> 00:04:15,519
it

121
00:04:12,560 --> 00:04:17,359
add to the end of we can add saturday to

122
00:04:15,519 --> 00:04:19,040
the end of our list

123
00:04:17,359 --> 00:04:21,359
and we can add sunday to the end of our

124
00:04:19,040 --> 00:04:21,359
list

125
00:04:22,639 --> 00:04:27,440
and we can print out days and now we've

126
00:04:24,639 --> 00:04:30,720
got seven days in our week rather than

127
00:04:27,440 --> 00:04:32,880
the five we had originally so that's

128
00:04:30,720 --> 00:04:34,880
great we can add to the end of the list

129
00:04:32,880 --> 00:04:36,160
we can also modify the list we can

130
00:04:34,880 --> 00:04:39,600
remove items from the list

131
00:04:36,160 --> 00:04:41,280
as well now you can do that

132
00:04:39,600 --> 00:04:43,280
by removing just from the beginning or

133
00:04:41,280 --> 00:04:45,919
the end or we can actually delete

134
00:04:43,280 --> 00:04:47,120
by a position so suppose we really don't

135
00:04:45,919 --> 00:04:49,520
like mondays

136
00:04:47,120 --> 00:04:50,800
um then we can do this we can do dell

137
00:04:49,520 --> 00:04:54,960
day zero

138
00:04:50,800 --> 00:04:57,600
and magically monday has disappeared

139
00:04:54,960 --> 00:04:59,680
um unfortunately we probably don't get

140
00:04:57,600 --> 00:05:01,680
to remove monday from our

141
00:04:59,680 --> 00:05:03,280
list of days in the real world so maybe

142
00:05:01,680 --> 00:05:05,919
we should add it back

143
00:05:03,280 --> 00:05:08,000
so we can actually use insert to add

144
00:05:05,919 --> 00:05:10,160
things

145
00:05:08,000 --> 00:05:12,400
insert to add things back into the list

146
00:05:10,160 --> 00:05:13,840
and insert takes two parameters the

147
00:05:12,400 --> 00:05:15,680
first one is the position so we're going

148
00:05:13,840 --> 00:05:17,840
to put monday at position zero

149
00:05:15,680 --> 00:05:20,240
and then what we add back in this case

150
00:05:17,840 --> 00:05:20,240
monday

151
00:05:20,639 --> 00:05:24,400
and you can see monday has come back

152
00:05:22,320 --> 00:05:25,840
into our list

153
00:05:24,400 --> 00:05:27,280
so that's what things we can do we can

154
00:05:25,840 --> 00:05:28,960
add things to this we can remove things

155
00:05:27,280 --> 00:05:30,639
from the list and so forth

156
00:05:28,960 --> 00:05:32,240
um the next thing we can do is we can

157
00:05:30,639 --> 00:05:32,960
modify the items that are actually in

158
00:05:32,240 --> 00:05:36,800
the list

159
00:05:32,960 --> 00:05:39,680
so for example if we get really excited

160
00:05:36,800 --> 00:05:42,960
that it's the end of the week

161
00:05:39,680 --> 00:05:46,560
we can for example get

162
00:05:42,960 --> 00:05:46,560
be all shouty about friday

163
00:05:49,759 --> 00:05:53,840
and now friday has become capitalized

164
00:05:52,400 --> 00:05:56,960
and shouty

165
00:05:53,840 --> 00:05:58,319
um so those are the sort of operations

166
00:05:56,960 --> 00:06:01,919
that we can perform on lists

167
00:05:58,319 --> 00:06:05,120
um adding modifying and so forth

168
00:06:01,919 --> 00:06:06,080
what else can we do um well how about we

169
00:06:05,120 --> 00:06:09,919
won't want to

170
00:06:06,080 --> 00:06:13,680
to copy a list so we could for example

171
00:06:09,919 --> 00:06:16,080
do more days is equal to days

172
00:06:13,680 --> 00:06:18,240
and now we can print out what more days

173
00:06:16,080 --> 00:06:18,240
is

174
00:06:19,680 --> 00:06:26,560
and it's the same content as days

175
00:06:23,759 --> 00:06:28,400
now suppose in more days we we don't

176
00:06:26,560 --> 00:06:29,120
want to be so excited about fridays we

177
00:06:28,400 --> 00:06:32,160
can then

178
00:06:29,120 --> 00:06:32,840
go and we can change that item back more

179
00:06:32,160 --> 00:06:37,120
days

180
00:06:32,840 --> 00:06:38,560
for is equal to friday as it was before

181
00:06:37,120 --> 00:06:41,759
and we can print out more days and

182
00:06:38,560 --> 00:06:44,960
everything has changed as we expected

183
00:06:41,759 --> 00:06:47,039
but not quite because if we look at

184
00:06:44,960 --> 00:06:50,400
what's happened to the our original list

185
00:06:47,039 --> 00:06:52,240
days that's changed too

186
00:06:50,400 --> 00:06:53,840
now that can be a bit of surprise we

187
00:06:52,240 --> 00:06:55,199
thought we'd made a copy of the list

188
00:06:53,840 --> 00:06:58,080
when we did this

189
00:06:55,199 --> 00:06:59,440
but that's not what happened what

190
00:06:58,080 --> 00:07:02,000
happened instead was

191
00:06:59,440 --> 00:07:03,680
it gave create another name more days

192
00:07:02,000 --> 00:07:06,000
and associated it with the same

193
00:07:03,680 --> 00:07:08,720
list that the name days was associated

194
00:07:06,000 --> 00:07:10,639
with didn't make a copy

195
00:07:08,720 --> 00:07:12,080
so we now have only one list but two

196
00:07:10,639 --> 00:07:14,240
names for it

197
00:07:12,080 --> 00:07:17,039
which sometimes is what you want and

198
00:07:14,240 --> 00:07:18,880
sometimes is not what you want

199
00:07:17,039 --> 00:07:20,160
if you actually want to make a copy of

200
00:07:18,880 --> 00:07:23,680
the list

201
00:07:20,160 --> 00:07:23,680
we can do copy of days

202
00:07:24,960 --> 00:07:28,400
and we do that we actually have to

203
00:07:26,560 --> 00:07:29,280
explicitly say we really really really

204
00:07:28,400 --> 00:07:31,759
do want

205
00:07:29,280 --> 00:07:33,199
python to copy it and of course copying

206
00:07:31,759 --> 00:07:34,319
is more expensive because you have to go

207
00:07:33,199 --> 00:07:34,880
through and create a copy of each

208
00:07:34,319 --> 00:07:37,440
integer

209
00:07:34,880 --> 00:07:38,639
items but if we do that then we can

210
00:07:37,440 --> 00:07:41,440
print it

211
00:07:38,639 --> 00:07:41,440
copy of days

212
00:07:42,840 --> 00:07:49,759
and that one actually um

213
00:07:46,720 --> 00:07:50,400
has same data and we can then for

214
00:07:49,759 --> 00:07:55,520
example

215
00:07:50,400 --> 00:07:55,520
we can delete the

216
00:07:56,560 --> 00:08:00,479
original days we can delete the weekend

217
00:07:58,800 --> 00:08:03,680
so we can delete

218
00:08:00,479 --> 00:08:06,479
six and we can delete five

219
00:08:03,680 --> 00:08:07,759
and now what we'll see is that we've

220
00:08:06,479 --> 00:08:11,199
changed days

221
00:08:07,759 --> 00:08:12,879
but copy of days really is a copy it's

222
00:08:11,199 --> 00:08:14,720
it was not changed by by those

223
00:08:12,879 --> 00:08:17,280
operations so now we have two lists

224
00:08:14,720 --> 00:08:19,120
rather than one

225
00:08:17,280 --> 00:08:21,280
so those are the main operations that we

226
00:08:19,120 --> 00:08:24,960
actually perform on a list

227
00:08:21,280 --> 00:08:27,280
um but that's perhaps not quite so

228
00:08:24,960 --> 00:08:27,680
useful what we often want to do is to go

229
00:08:27,280 --> 00:08:30,560
through

230
00:08:27,680 --> 00:08:31,039
and access all of the data in the list

231
00:08:30,560 --> 00:08:33,039
and so

232
00:08:31,039 --> 00:08:34,399
to do that i'm going to actually have to

233
00:08:33,039 --> 00:08:38,640
fire up an editor

234
00:08:34,399 --> 00:08:42,080
and show you how to actually access

235
00:08:38,640 --> 00:08:45,120
all the items so now let's

236
00:08:42,080 --> 00:08:45,120
create our list again

237
00:08:48,480 --> 00:08:55,839
one day i can't type today

238
00:08:57,440 --> 00:09:00,000
tuesday

239
00:09:00,959 --> 00:09:03,600
wednesday

240
00:09:06,720 --> 00:09:09,839
really having trouble typing

241
00:09:13,360 --> 00:09:16,880
okay so that's our list back where we

242
00:09:16,320 --> 00:09:19,440
were

243
00:09:16,880 --> 00:09:20,399
now how are we going to go through and

244
00:09:19,440 --> 00:09:23,120
say print out

245
00:09:20,399 --> 00:09:25,040
all of the elements of the list well

246
00:09:23,120 --> 00:09:27,120
there's more than one way to do this

247
00:09:25,040 --> 00:09:28,880
so we'll try it in two different ways

248
00:09:27,120 --> 00:09:29,680
the first way we're going to use a

249
00:09:28,880 --> 00:09:34,160
python

250
00:09:29,680 --> 00:09:37,839
for loop and so for a day num

251
00:09:34,160 --> 00:09:37,839
in range

252
00:09:39,360 --> 00:09:44,800
zero to length of days

253
00:09:45,600 --> 00:09:51,839
we're going to mr bracket outlet

254
00:09:53,760 --> 00:10:00,320
i'm going to for each of those print out

255
00:09:57,040 --> 00:10:03,839
both the day num itself

256
00:10:00,320 --> 00:10:06,000
and the contents of that part of the day

257
00:10:03,839 --> 00:10:06,000
so

258
00:10:09,360 --> 00:10:13,920
like that okay so

259
00:10:12,480 --> 00:10:15,920
let's run this and then we'll come back

260
00:10:13,920 --> 00:10:19,839
and look at how it actually works

261
00:10:15,920 --> 00:10:19,839
so first of all

262
00:10:21,200 --> 00:10:24,399
what we see is it's run through and it's

263
00:10:22,720 --> 00:10:27,760
printed out on each line

264
00:10:24,399 --> 00:10:30,480
the position in the list and the content

265
00:10:27,760 --> 00:10:30,480
of that position

266
00:10:30,959 --> 00:10:38,240
okay so what's going on here um this

267
00:10:34,240 --> 00:10:41,600
structure four will let us go through a

268
00:10:38,240 --> 00:10:43,120
a set of data um and and do

269
00:10:41,600 --> 00:10:44,800
the same operation on each of those

270
00:10:43,120 --> 00:10:46,800
things in a set of data so what's a set

271
00:10:44,800 --> 00:10:50,399
of data here well what we've

272
00:10:46,800 --> 00:10:51,600
done is for day num is in range 0 to len

273
00:10:50,399 --> 00:10:54,640
days

274
00:10:51,600 --> 00:10:55,680
and so what this range will do is it

275
00:10:54,640 --> 00:10:58,640
will create

276
00:10:55,680 --> 00:11:00,399
it will generate each time through the

277
00:10:58,640 --> 00:11:01,200
next one in the sequence so with the

278
00:11:00,399 --> 00:11:04,000
first time

279
00:11:01,200 --> 00:11:04,800
through this little loop it will

280
00:11:04,000 --> 00:11:06,560
generate

281
00:11:04,800 --> 00:11:08,160
zero the next time through it will

282
00:11:06,560 --> 00:11:09,760
generate one and then it will generate

283
00:11:08,160 --> 00:11:12,959
two and then it will generate three

284
00:11:09,760 --> 00:11:13,360
all the way up to len days minus one so

285
00:11:12,959 --> 00:11:16,079
it will

286
00:11:13,360 --> 00:11:17,040
if len days is is five this will go up

287
00:11:16,079 --> 00:11:18,720
to number four

288
00:11:17,040 --> 00:11:20,720
and actually that's what we want for

289
00:11:18,720 --> 00:11:23,360
accessing the items from the list

290
00:11:20,720 --> 00:11:25,120
so each time through this variable day

291
00:11:23,360 --> 00:11:26,480
num will take on a different value the

292
00:11:25,120 --> 00:11:27,839
first time it will take on the value

293
00:11:26,480 --> 00:11:29,839
zero the second time we'll take on the

294
00:11:27,839 --> 00:11:32,880
value one and so forth

295
00:11:29,839 --> 00:11:35,680
and so this is going to go through

296
00:11:32,880 --> 00:11:36,320
five times because range from zero to

297
00:11:35,680 --> 00:11:39,120
then days

298
00:11:36,320 --> 00:11:40,640
minus one is five elements print out the

299
00:11:39,120 --> 00:11:42,560
five elements of our list

300
00:11:40,640 --> 00:11:44,079
and each time we're printing out both

301
00:11:42,560 --> 00:11:46,880
the number

302
00:11:44,079 --> 00:11:48,000
that comes from the range and the

303
00:11:46,880 --> 00:11:49,440
element of days

304
00:11:48,000 --> 00:11:51,519
that is associated with that particular

305
00:11:49,440 --> 00:11:56,560
number and so

306
00:11:51,519 --> 00:11:59,920
if we run that again it will

307
00:11:56,560 --> 00:12:02,480
it will print out the um each time that

308
00:11:59,920 --> 00:12:03,200
each number so day numb took on value 0

309
00:12:02,480 --> 00:12:04,880
the first time

310
00:12:03,200 --> 00:12:07,120
value 1 the second time and so forth

311
00:12:04,880 --> 00:12:09,120
going through the list

312
00:12:07,120 --> 00:12:10,959
so that's the first way that we can

313
00:12:09,120 --> 00:12:14,160
actually access

314
00:12:10,959 --> 00:12:16,240
the data from the list now

315
00:12:14,160 --> 00:12:17,200
there's another way of doing it which is

316
00:12:16,240 --> 00:12:21,360
a little bit more

317
00:12:17,200 --> 00:12:25,839
pythonic and that's to actually

318
00:12:21,360 --> 00:12:25,839
for day in days

319
00:12:26,320 --> 00:12:30,160
now we'll just print out day

320
00:12:30,560 --> 00:12:33,839
and this will let us iterate over the

321
00:12:32,959 --> 00:12:37,200
list

322
00:12:33,839 --> 00:12:39,200
each time the variable day will be set

323
00:12:37,200 --> 00:12:40,240
first time to the first element of the

324
00:12:39,200 --> 00:12:41,519
list

325
00:12:40,240 --> 00:12:43,680
second time through to the second

326
00:12:41,519 --> 00:12:47,040
element of the list and so forth

327
00:12:43,680 --> 00:12:47,040
and so if we run that

328
00:12:48,639 --> 00:12:53,120
here we get monday tuesday wednesday

329
00:12:50,320 --> 00:12:55,279
thursday and friday which is the more

330
00:12:53,120 --> 00:12:57,040
pythonic way to actually access the data

331
00:12:55,279 --> 00:13:01,440
from the list

332
00:12:57,040 --> 00:13:05,440
so that's really the basics of accessing

333
00:13:01,440 --> 00:13:08,240
modifying deleting

334
00:13:05,440 --> 00:13:10,160
appending and changing items of list

335
00:13:08,240 --> 00:13:11,360
python this is a very very flexible data

336
00:13:10,160 --> 00:13:13,440
structure

337
00:13:11,360 --> 00:13:14,399
and that's really all you need to know

338
00:13:13,440 --> 00:13:18,000
for now about

339
00:13:14,399 --> 00:13:18,399
how lists work now next week we're going

340
00:13:18,000 --> 00:13:21,279
to look

341
00:13:18,399 --> 00:13:22,639
at how lists perform but for now all i

342
00:13:21,279 --> 00:13:24,560
really want to know is

343
00:13:22,639 --> 00:13:25,920
how do lists work how do you use them

344
00:13:24,560 --> 00:13:27,120
and i think we've covered that just

345
00:13:25,920 --> 00:13:35,839
about enough

346
00:13:27,120 --> 00:13:35,839
okay see you next time

347
00:13:40,000 --> 00:13:43,519
[Music]

348
00:13:41,440 --> 00:13:43,519
you

